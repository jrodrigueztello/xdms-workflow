plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.xoftix.xdms.workflow.activiti'
version = '1.0'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	maven { url 'https://oss.jfrog.org/artifactory/oss-snapshot-local/' }
}

ext {
	set('springBootAdminVersion', "2.2.1")
	set('springCloudVersion', "Hoxton.SR1")
	set('swagger_version',"2.10.5")
	set('commons_codec_version',"1.13")
	set('commons_io_version',"2.6")
	set('tika_core_version',"1.22")
}

dependencies {
	
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	compile group: 'org.activiti', name: 'activiti-image-generator', version: '7.1.0.M6'
	
	// https://mvnrepository.com/artifact/org.activiti.dependencies/activiti-dependencies
	compile group: 'org.activiti.dependencies', name: 'activiti-dependencies', version: '7.1.0.M6', ext: 'pom'
	
	// https://mvnrepository.com/artifact/org.activiti/activiti-spring-boot-starter
	compile group: 'org.activiti', name: 'activiti-spring-boot-starter', version: '7.1.0.M6'
	
	// https://mvnrepository.com/artifact/com.h2database/h2
	testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
	
	// activemq
	implementation 'org.springframework.boot:spring-boot-starter-activemq'
	
	compile group: 'org.activiti', name: 'activiti-bpmn-layout', version: '7.1.0.M6'
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	implementation "commons-codec:commons-codec:${commons_codec_version}"
	implementation "commons-io:commons-io:${commons_io_version}"
	implementation "org.apache.tika:tika-core:${tika_core_version}"
	
	implementation "io.springfox:springfox-swagger2:${swagger_version}"
	implementation "io.springfox:springfox-swagger-ui:${swagger_version}"
	implementation "io.springfox:springfox-spring-web:${swagger_version}"
	implementation "io.springfox:springfox-spring-webmvc:${swagger_version}"
}

dependencyManagement {
	imports {
		mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
